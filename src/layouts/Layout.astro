---
import "@/styles/global.css"
import { ClientRouter } from "astro:transitions"

import Footer from "@/components/layout/Footer.astro"
import Navbar from "@/components/layout/Navbar.astro"
import ParticlesBG from "@/components/layout/Particles"
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>Daniel Mamuza â€“ Software Engineer</title>

    <link rel="preload" href="/profile/spiderman.jpg" as="image" />
    <link rel="preload" href="/profile/me.jpg" as="image" />
    <link rel="preload" href="/profile/minecraft.jpg" as="image" />
    <ClientRouter />
  </head>
  <body>
    <ParticlesBG client:load />
    <Navbar />
    <div class="mx-6 md:mx-0">
      <slot />
    </div>
    <Footer />
  </body>
</html>

<style>
  html {
    tab-size: 2;
  }

  html,
  body {
    padding: 0;
    margin: 0;
    width: 100%;
    height: 100%;
  }

  /* body {
    background-image: url("/src/assets/background.svg");
    background-size: cover;
    background-repeat: no-repeat;
    background-position: center;
    background-attachment: fixed;
  } */
</style>

<script is:inline>
  function setDarkMode(document) {
    const getThemePreference = () => {
      if (
        typeof localStorage !== "undefined" &&
        localStorage.getItem("theme")
      ) {
        return localStorage.getItem("theme")
      }
      return window.matchMedia("(prefers-color-scheme: dark)").matches
        ? "dark"
        : "theme-light"
    }
    const isDark = getThemePreference() === "dark"
    document.documentElement.classList[isDark ? "add" : "remove"]("dark")

    if (typeof localStorage !== "undefined") {
      const observer = new MutationObserver(() => {
        const isDark = document.documentElement.classList.contains("dark")
        localStorage.setItem("theme", isDark ? "dark" : "theme-light")
      })
      observer.observe(document.documentElement, {
        attributes: true,
        attributeFilter: ["class"],
      })
    }
  }

  setDarkMode(document)

  document.addEventListener("astro:before-swap", (ev) => {
    setDarkMode(ev.newDocument)
  })
</script>
