---
import { getCollection } from "astro:content";
import Grid from "./Grid.astro";
import PortfolioPreview from "./PortfolioPreview.astro";

interface Props {
  count?: number;
  variant?: "offset" | "small";
}
const { count, variant } = Astro.props;

const projects = (await getCollection("projects"))
  .sort((a, b) => b.data.publishDate.valueOf() - a.data.publishDate.valueOf())
  .slice(0, count);
---

<div class="gallery">
  <Grid variant={variant}>
    {
      projects.map((project) => (
        <li>
          <PortfolioPreview project={project} />
        </li>
      ))
    }
  </Grid>
</div>

<script>
  const initObserver = () => {
    const observer = new IntersectionObserver((entries) => {
      entries.forEach((entry, index) => {
        if (entry.isIntersecting) {
          if (index % 2 === 0) entry.target.classList.add("slide-left");
          else entry.target.classList.add("slide-right");
        }
      });
    });

    const projects = document.querySelectorAll("li");
    projects.forEach((el) => observer.observe(el));
  };

  document.addEventListener("astro:page-load", initObserver);
  initObserver();
</script>

<style>
  @media (min-width: 50em) {
    .gallery {
      grid-area: gallery;
    }
  }

  li {
    opacity: 0;
    filter: blur(5px);
    transition:
      opacity 0.6s,
      filter 0.6s,
      transform 0.6s cubic-bezier(0, 0.96, 0.33, 0.83);
  }

  @media (prefers-reduced-motion) {
    li {
      transition: none;
    }
  }

  .slide-left {
    opacity: 1;
    filter: blur(0);
    transform: translateX(0px) !important;
  }
  .slide-right {
    opacity: 1;
    filter: blur(0);
    transform: translateX(0px) !important;
  }

  li:nth-child(odd) {
    transform: translateX(-100%);
  }

  li:nth-child(even) {
    transform: translateX(100%);
  }

  li:nth-child(1) {
    transition-delay: 0s;
  }

  li:nth-child(2) {
    transition-delay: 0.4s;
  }

  li:nth-child(3) {
    transition-delay: 0.8s;
  }

  li:nth-child(4) {
    transition-delay: 1.2s;
  }

  li:nth-child(5) {
    transition-delay: 0.8s;
  }

  li:nth-child(6) {
    transition-delay: 1s;
  }

  li:nth-child(7) {
    transition-delay: 1.2s;
  }

  li:nth-child(8) {
    transition-delay: 1.4s;
  }

  li:nth-child(9) {
    transition-delay: 1.6s;
  }

  li:nth-child(10) {
    transition-delay: 1.8s;
  }
</style>
