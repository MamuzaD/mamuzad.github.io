---
export const prerender = false

import { Image } from "astro:assets"

const api = import.meta.env.STEAM_API_KEY
const steamId = "76561197989108352"
const apiUrl = `http://api.steampowered.com/IPlayerService/GetRecentlyPlayedGames/v0001/?key=${api}&steamid=${steamId}&format=json&count=4`

type Game = {
  appid: number
  name: string
  playtime_2weeks: number
  playtime_forever: number
  img_icon_url: string
  img_logo_url: string
}

const response = await fetch(apiUrl)
const data = await response.json()
const games: Game[] = data.response.games
---

<div class="games">
  <div
    class="bg-muted grid max-h-48 w-full grid-cols-2 place-items-center gap-2 rounded-md p-2 backdrop-blur-lg"
  >
    {
      games.map((game) => (
        <Image
          width={374}
          height={488}
          src={`https://cdn.cloudflare.steamstatic.com/steam/apps/${game.appid}/hero_capsule.jpg`}
          alt={`${game.name}'s Picture`}
          style={{ imageRendering: "crisp-edges" }}
          class="max-h-[4.75rem] max-w-[4.75rem] transform rounded-lg object-cover transition-transform duration-300 ease-in-out hover:scale-110"
        />
      ))
    }

    {/* Render empty squares if less than 4 games */}
    {
      games.length < 4 &&
        Array.from({ length: 4 - games.length }).map((_, index) => (
          <div class="h-[4.75rem] w-[4.75rem] rounded-lg bg-gray-200 transition-transform duration-300 ease-in-out hover:scale-110" />
        ))
    }
  </div>
</div>
