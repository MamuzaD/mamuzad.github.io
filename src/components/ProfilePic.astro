---
interface Props {
  height: string;
  width: string;
  small?: boolean;
}

const { height, width, small } = Astro.props;
---

<profile-pic>
  {
    small ? (
      <button class="profile-picture-small" aria-label="Change profile picture">
        <img decoding="async" alt="Picture of me" />
      </button>
    ) : (
      <button class="profile-picture" aria-label="Change profile picture">
        <img {height} {width} decoding="async" alt="Picture of me" />
      </button>
    )
  }
</profile-pic>

<script>
  import { currentProfile, profiles, cycleProfile } from "../util/store";

  class ProfilePic extends HTMLElement {
    constructor() {
      super();

      this.renderProfilePicture();

      // Update the component whenever the profile changes
      currentProfile.subscribe(() => this.renderProfilePicture());

      // Add event listener to cycle profiles on click
      const button = this.querySelector("button");
      if (button) {
        button.addEventListener("click", (event) => {
          event.preventDefault();
          cycleProfile();
        });
      }
    }

    renderProfilePicture() {
      const currentProfileName = currentProfile.get();
      const profile = profiles.find((p) => p.name === currentProfileName);

      const img = this.querySelector("img");
      if (img && profile) {
        img.src = profile.path;

        // You may also want to change the theme based on the profile
        currentProfile.set(profile.name);
      }
    }
  }

  customElements.define("profile-pic", ProfilePic);
</script>

<style>
  profile-pic {
    padding: 0;
    max-width: 320px;
    max-height: 640px;
    border-radius: 1.5rem;
    animation: blur-in 0.7s linear;
  }

  @media (prefers-reduced-motion) {
    profile-pic {
      animation: none;
    }
  }

  profile-pic:hover {
    box-shadow: rgba(0, 0, 0, 0.56) 0px 22px 70px 4px;
  }

  .profile-picture {
    padding: 0;
    cursor: pointer;
    background: none;
    border: none;
    outline: none;
    position: relative;
    overflow: hidden;
    z-index: 1;
  }

  .profile-picture img {
    object-fit: cover;
    border-radius: 1.5rem;
  }

  .profile-picture-small {
    width: 3rem;
    height: 3rem;
    border-radius: 100%;
  }

  .profile-picture-small img {
    width: 3rem;
    height: 3rem;
    border-radius: 100%;
    object-fit: cover;
  }

  @media (min-width: 50em) {
    .profile-picture img {
      aspect-ratio: 3/4;
    }
  }
</style>
